@model eGoatDDD.Application.Goats.Models.GoatsListNonDtoViewModel
@using Microsoft.AspNetCore.Authorization
@using eGoatDDD.Domain.Constants
@inject IAuthorizationService AuthorizationService


@{
    ViewData["Title"] = "Listing";
}

@if ((await AuthorizationService.AuthorizeAsync(User, "CanEdits")).Succeeded)
{
    <div class="row filter mb-4">
        <div class="col col-6 col-md-6">
            <a class="btn btn-primary @(@ViewBag.Listing == "all" ? "btn-success" : "")" href="~/ExcelDownload/Goats"><i class="fas fa-file-excel"></i> Download</a>
            <a class="btn btn-primary @(@ViewBag.Listing == "all" ? "btn-success" : "")" href="~/Goat/Listing"><i class="fas fa-align-justify"></i> Listing</a>
        </div>
        <div class="col col-6 col-md-6 text-right">
            <a class="btn btn-primary @(@ViewBag.Listing == "all" ? "btn-success" : "")" href="~/Goat/Filtered/all">All</a>
            <a class="btn btn-primary @(@ViewBag.Listing == "alive" ? "btn-success" : "")" href="~/Goat/Filtered/alive">Alive</a>
            <a class="btn btn-primary @(@ViewBag.Listing == "disposed" ? "btn-success" : "")" href="~/Goat/Filtered/disposed">Disposed</a>
        </div>
    </div>
}
@if (Model != null)
{
    var calculatedCtr = ((int)ViewData["CurrentPage"] - 1) * (int)ViewData["PageSize"];
    var totalPages = (int)ViewData["TotalPages"];
    var currentPage = (int)ViewData["CurrentPage"];


    @if (!(await AuthorizationService.AuthorizeAsync(User, "CanEdits")).Succeeded)
    {

        <div class="anon goat">
            <div class="row">
                @foreach (var (item, ctr) in Model.Goats.Select((v, i) => (v, i)))
                {


                    <div class="col col-4 col-md-3 mb-3">
                        <div class="card bg-dark text-white">
                            <span class="small position-absolute" style="background:#000000;padding:3px 8px;opacity: 0.6;border-radius: 100%;">@(calculatedCtr + ctr + 1)</span>

                            @if (item.Goat.GoatResources != null)
                            {
                                var str = string.Format("<div class='animal-tag-container mt-1'><div class='animal-tag animal-tag-{1}'>{0}</div></div>", item.Goat.Code, item.Goat.Color.Name.ToLower().ToLower().ToString());

                                <a class="lg-item" href="/@(item.Goat.GoatResources.First().Location)/@(item.Goat.GoatResources.First().Filename)" data-sub-html="@str" data-rel="@item.Goat.Code">
                                    <img class="card-img w-100" src="/@(item.Goat.GoatResources.First().Location)/resized/@(item.Goat.GoatResources.First().Filename)" />
                                    <div class="card-img-overlay">
                                        <div class="animal-tag-container mt-1">
                                            <div class="animal-tag animal-tag-@item.Goat.Color.Name.ToLower().ToString()">@item.Goat.Code</div>

                                        </div>
                                    </div>
                                </a>

                                @* foreach (var (resource, index) in item.Goat.GoatResources.Select((v, i) => (v, i)))
                                    {
                                        @ if (index == 0)
                                        {
                                            var str = string.Format("<div class='animal-tag-container mt-1'><div class='animal-tag animal-tag-{1}'>{0}</div></div>", item.Goat.Code, item.Goat.Color.Name.ToLower().ToLower().ToString());

                                            <a class="lg-item" href="/@(resource.Location)/@(resource.Filename)" data-sub-html="@str" data-rel="@item.Goat.Code">
                                                <img class="card-img w-100" src="/@(resource.Location)/@(resource.Filename)" />
                                                <div class="card-img-overlay">
                                                    <div class="animal-tag-container mt-1">
                                                        <div class="animal-tag animal-tag-@item.Goat.Color.Name.ToLower().ToString()">@item.Goat.Code</div>

                                                    </div>
                                                </div>
                                            </a>
                                        }
                                    }*@
                            }
                            else
                            {
                                <div class="card-body">
                                    <h5 class="card-title">@item.Goat.Code</h5>
                                    <div class="card-text">
                                        <div class="animal-tag-container mt-1">
                                            <div class="animal-tag animal-tag-@item.Goat.Color.Name.ToLower().ToString()">@item.Goat.Code</div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                }
            </div>
        </div>
        @if (totalPages > 1)
        {
            var href = "/Goat";

            <div class="mt-3 mb-3 pt-3">
                <nav aria-label="Page navigation">
                    <ul class="pagination">
                        @for (int i = 1; i <= totalPages; i++)
                        {


                            if ((i == 1) && (currentPage != 1))
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@href/1" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                        <span class="sr-only">Previous</span>
                                    </a>
                                </li>
                            }
                            <li class="page-item"><a class="page-link" href="@href/@i">@i</a></li>

                            if ((i == totalPages) && (currentPage != totalPages))
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@href/@totalPages" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                        <span class="sr-only">Next</span>
                                    </a>
                                </li>
                            }
                        }
                    </ul>
                </nav>
            </div>

        }

    }
    else
    {
        @foreach (var (item, ctr) in Model.Goats.Select((v, i) => (v, i)))
        {
            <div class="row bg-white mb-3">
                <div class="col-1">
                    <div class="card h-100 border-0">
                        <div class="card-footer bg-transparent border-0 position-relative">
                            @if ((await AuthorizationService.AuthorizeAsync(User, "CanEdits")).Succeeded)
                            {
                                <a asp-controller="Goat" asp-action="Edit" asp-route-goatId="@(item.Goat.Id)">
                                    <div class="animal-tag-container position-relative">
                                        <div class="animal-tag animal-tag-@item.Goat.Color.Name.ToLower().ToString()">@item.Goat.Code <i class="fas fa-edit"><!-- empty --></i></div>
                                    </div>
                                </a>
                            }
                            else
                            {
                                <div class="animal-tag-container position-relative">
                                    <div class="animal-tag animal-tag-@item.Goat.Color.Name.ToLower().ToString()">@item.Goat.Code</div>
                                </div>
                            }
                        </div>
                        <div class="w-100">
                            <span class="small text-light bg-secondary p-1 border-circle">@(calculatedCtr + ctr + 1)</span>
                        </div>
                    </div>
                </div>
                <div class="col-2">
                    <div class="card">
                        @if (item.Goat.GoatResources != null)
                        {
                            var str = string.Format("<div class='animal-tag-container mt-1'><div class='animal-tag animal-tag-{1}'>{0}</div></div>", item.Goat.Code, item.Goat.Color.Name.ToLower().ToLower().ToString());

                            <div class="card-img">
                                <div class="w-100">
                                    <div class="lg-item" data-rel="@item.Goat.Code" data-src="/@(item.Goat.GoatResources.First().Location)/@(item.Goat.GoatResources.First().Filename)" data-sub-html="@str"><img class="w-100" src="/@(item.Goat.GoatResources.First().Location)/resized/@(item.Goat.GoatResources.First().Filename)" /></div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <div class="goat col col-4">
                    <div class="card border-0">
                        <div class="card-footer bg-transparent border-0 small">
                            <div class="row mb-1">
                                <div class="col col-12">
                                    @{
                                        var birthdate = item.Goat.BirthDate.HasValue ? item.Goat.BirthDate.Value : DateTime.Now;

                                        DateTime date1 = birthdate;
                                        DateTime date2 = DateTime.Now;

                                        int oldMonth = date2.Month;
                                        while (oldMonth == date2.Month)
                                        {
                                            date1 = date1.AddDays(-1);
                                            date2 = date2.AddDays(-1);
                                        }

                                        int years = 0, months = 0, days = 0;
                                        // , hours = 0, minutes = 0, seconds = 0, milliseconds = 0;

                                        // getting number of years
                                        while (date2.CompareTo(date1) >= 0)
                                        {
                                            years++;
                                            date2 = date2.AddYears(-1);
                                        }
                                        date2 = date2.AddYears(1);
                                        years--;


                                        // getting number of months and days
                                        oldMonth = date2.Month;
                                        while (date2.CompareTo(date1) >= 0)
                                        {
                                            days++;
                                            date2 = date2.AddDays(-1);
                                            if ((date2.CompareTo(date1) >= 0) && (oldMonth != date2.Month))
                                            {
                                                months++;
                                                days = 0;
                                                oldMonth = date2.Month;
                                            }
                                        }
                                        date2 = date2.AddDays(1);

                                        <span><strong>@years</strong> Year  <strong>@months</strong> Month  <strong>@days</strong> Days</span>
                                    }

                                </div>

                                <div class="col col-12">
                                    Birthdate: @item.Goat.BirthDate?.ToString("dd MMM yyyy")
                                </div>
                            </div>
                            <div class="row mb-1">
                                <div class="col col-12">
                                    Gender: @(item.Goat.Gender == 'M' ? "Male" : "Female")
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-2 small">
                    @if (item.Goat.GoatBreeds != null)
                    {

                        <strong>Breeds</strong>

                        foreach (var breed in item.Goat.GoatBreeds)
                        {
                            <div class="row">

                                <div class="col col-2 col-xs-12 text-nowrap">
                                    @breed.Percentage<em>%</em>
                                </div>
                                <div class="col col-8 col-xs-12">
                                    @breed.Breed.Name
                                </div>
                            </div>
                        }
                    }
                </div>
                <div class="col-2">
                    @if ((await AuthorizationService.AuthorizeAsync(User, "CanDisposes")).Succeeded)
                    {


                        <p data-toggle="tooltip" data-placement="bottom" title="Dispose"><span class="btn btn-danger delete dispose" data-remote="true" data-link="/api/disposal/goat" data-id="@item.Goat.Id" data-toggle="modal" data-target="#modalGoatDisposal@(item.Goat.Id)"><i class="fas fa-times-circle"><!--empty--></i></span> Dispose</p>

                        <!-- Modal -->
                        <div class="modal fade" id="modalGoatDisposal@(item.Goat.Id)" tabindex="-1" role="dialog" aria-labelledby="modalGoatDisposalCenterTitle" aria-hidden="true">

                            <input type="hidden" class="DisposalGoatId" value="@(item.Goat.Id)" />
                            <input type="hidden" class="ApiURL" value="/api/disposal/goat" />

                            <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="modalGoatDisposalCenterTitle">Dispose</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                        <div class="animal-tag-container mt-1">
                                            <div class="animal-tag animal-tag-@item.Goat.Color.Name.ToLower().ToString()">@item.Goat.Code</div>
                                        </div>
                                    </div>
                                    <div class="modal-body">
                                        <div class="row">
                                            <div class="col col-6">
                                                <div class="form-group">
                                                    <label class="small d-block">Dispose Type</label>
                                                    <select required class="form-control DisposalType w-100" name="DisposalType">
                                                        <option value="0">Disposal Type</option>
                                                        <option value="1">Slaughter</option>
                                                        <option value="2">Sold Whole - Local</option>
                                                        <option value="3">Sold Whole - Online</option>
                                                        <option value="4">Death</option>
                                                        <option value="99">Other</option>
                                                    </select>
                                                </div>
                                                <div class="form-group">
                                                    <label class="small d-block">Dispose Date</label>
                                                    <div class='input-group'>
                                                        <input required name="DiposedOn" asp-format="{0:dd/MM/yyyy}" type="date" class="form-control DisposedOn" />
                                                        <span class="input-group-addon">
                                                            <span class="glyphicon glyphicon-calendar"></span>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col col-6">
                                                <div class="form-group">
                                                    <label class="small d-block">Reason</label>
                                                    <textarea rows="8" required class="form-control DisposalReason w-100 h-100 d-inline-block" name="DisposalReason"></textarea>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-danger dispose delete submit">Dispose</button>
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                    <p><a class="btn btn-primary" href="~/Goat/Get/@item.Goat.Id"><i class="fas fa-eye"><!-- empty--></i></a> View</p>
                </div>

            </div>
        }

        @if (totalPages > 1)
        {
            var href = "/Goat/Index";

            <div class="mt-3 mb-3 pt-3">
                <nav aria-label="Page navigation">
                    <ul class="pagination">

                        @if (ViewBag.Listing != "")
                        {

                            switch (@ViewBag.Listing)
                            {
                                case "all":
                                    href = "/Goat/Filtered/all";
                                    break;
                                case "alive":
                                    href = "/Goat/Filtered/alive";
                                    break;
                                case "disposed":
                                    href = "/Goat/Filtered/disposed";
                                    break;
                                default:
                                    href = "/Goat/Index";
                                    break;
                            }
                        }
                        @for (int i = 1; i <= totalPages; i++)
                        {


                            if ((i == 1) && (currentPage != 1))
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@href/1" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                        <span class="sr-only">Previous</span>
                                    </a>
                                </li>
                            }
                            <li class="page-item"><a class="page-link" href="@href/@i">@i</a></li>

                            if ((i == totalPages) && (currentPage != totalPages))
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@href/@totalPages" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                        <span class="sr-only">Next</span>
                                    </a>
                                </li>
                            }
                        }
                    </ul>
                </nav>
            </div>

        }
    }
}

@section scripts{
    <script type="text/javascript">
        (function ($) {
            $.date = function (dateObject, delimeter = "-") {
                var d = new Date(dateObject);
                var day = d.getDate();
                var month = d.getMonth() + 1;
                var year = d.getFullYear();
                if (day < 10) {
                    day = "0" + day;
                }
                if (month < 10) {
                    month = "0" + month;
                }
                var date = year + delimeter + month + delimeter + day;

                return date;
            };


            function displayServicesTable(uriApi, goatId, contentTargetElement) {
                $.ajax({
                    type: "POST",
                    url: uriApi,
                    data: { GoatId: goatId, count: 0 },
                }).done(function (result) {
                    if (result.error == 0) {
                        if (result.services != null) {
                            var $table = $('<table  class="table table-bordered table-striped small w-100" />');
                            row = $('<tr />');
                            row.append('<th>#</th>');
                            row.append('<th>Date Start</th>');
                            row.append('<th>Date End</th>');
                            row.append('<th>Type</th>');
                            row.append('<th>Category</th>');
                            row.append('<th>Description</th>');
                            row.append('<th>Actions</th>');
                            $table.append(row);
                            $(result.services).each(function (index) {
                                row = $('<tr />');
                                index++;
                                row.append('<td>' + index + '</td>');
                                row.append('<td>' + $.date(this.start) + '</td>');
                                row.append('<td>' + $.date(this.end) + '</td>');
                                row.append('<td>' + this.type + '</td>');
                                row.append('<td>' + this.category + '</td>');
                                row.append('<td>' + this.description + '</td>');
                                row.append('<td><div class="row"><div class="col col-6"><span data-id="' + this.serviceId + '" data-goat="' + this.goatId + '" data-start="' + $.date(this.start) + '" data-end="' + $.date(this.end) + '" data-type="' + this.type + '" data-category="' + this.category + '" data-description="' + encodeURIComponent(this.description) + '" class="edit btn btn-primary"><i class="fas fa-edit"><!--empty--></i></span></div><div class="col col-6"><span class="delete btn btn-primary" data-id="' + this.serviceId + '"><i class="fas fa-minus-circle"><!--empty--></i></span></div></div></td>');
                                $table.append(row);
                            });

                            contentTargetElement.html($table);
                        } else {
                            contentTargetElement.html("Something went wrong.");
                        }
                    } else {
                        contentTargetElement.html(result.response);
                    }
                });
            }

            $(document).ready(function () {

                $goat = $('.goat').lightGallery({
                    selector: '.lg-item'
                });

                var colours = ['#21171A', '#81575E', '#9C5043', '#8F655D'];
                $goat.on('onBeforeSlide.lg', function (event, prevIndex, index) {
                    $('.lg-outer').css('background-color', colours[index])
                });

                $('[data-toggle="tooltip"]').tooltip()

                $("#modalGoatDisposal").on("show.bs.modal", function (e) {
                    var $link = $(e.relatedTarget);
                });

                $(".delete.dispose.submit").on("click", function (e) {

                    var $this = $(this);

                    var $parentContainer = $this.parents(".modalGoatDisposal");

                    var parentId = ".modalGoatDisposal" + $parentContainer.find(".DisposalGoatId").val();

                    var id = $(parentId);

                    var $thisData = $this.parents(id);

                    var $submitData = $("#modalGoatDisposal" + $parentContainer.find(".DisposalGoatId").val());

                    console.log($submitData.find(".DisposalReason").val());

                    $.ajax({
                        type: "POST",
                        url: $thisData.find(".ApiURL").val(),
                        data: { DisposalGoatId: $submitData.find(".DisposalGoatId").val(), DisposalType: $submitData.find(".DisposalType").val(), DisposalReason: $submitData.find(".DisposalReason").val(), DisposedOn: $submitData.find(".DisposedOn").val() },
                    }).done(function (result) {
                        if (result.error == 0) {
                            if (result.message != null) {
                                $this.find(".modal-body").html(result.message);
                            } else {
                                $this.find(".modal-body").html("Something went wrong.");
                            }

                            $('#modalGoatDisposal').modal('hide');

                            window.location.reload();

                        } else {
                            $this.find(".modal-body").html(result.response);
                        }

                    });
                });

                $("#modalGoatServices").on("show.bs.modal", function (e) {
                    var $link = $(e.relatedTarget);
                    var $this = $(this);

                    $this.find(".modal-body .services").removeClass("d-none");
                    $this.find(".modal-body .edit").addClass("d-none");

                    displayServicesTable($link.data("link"), $link.data("id"), $this.find(".modal-body .services"));


                });

                $(".add.service").on("click", function () {

                    var container = $(this).parents(".service-wrapper");

                    container.find(".close.service").removeClass("d-none");

                    container.find(".fields").removeClass("d-none");

                });

                $(".close.service").on("click", function () {

                    var container = $(this).parents(".service-wrapper");

                    container.find(".close.service").addClass("d-none");

                    container.find(".fields").addClass("d-none");

                });

                $(".frm-add-service").on("submit", function (e) {
                    e.preventDefault();

                    var container = $(this);
                    var $type = container.find("select[name='type']").val();
                    var $category = container.find("select[name='category']").val();
                    var $goat = container.find("input[name='goat']").val();
                    var $description = container.find("textarea[name='description']").val();
                    var $start = container.find("input[name='start']").val();
                    var $end = container.find("input[name='end']").val();

                    $.ajax({
                        type: "POST",
                        url: '/api/service/put',
                        data: { GoatId: $goat, Type: $type, Category: $category, Description: $description, Start: $start, End: $end },
                    }).done(function (result) {
                        container.parents(".service-wrapper").find(".latest").find(".service-type").html(result.service.type);
                        container.parents(".service-wrapper").find(".latest").find(".service-description").html(result.service.description);
                        container.parents(".service-wrapper").find(".latest").find(".service-category").html(result.service.category);

                        container.parents(".service-wrapper").find(".latest").find(".service-start").html($.date(result.service.start));
                        container.parents(".service-wrapper").find(".latest").find(".service-end").html($.date(result.service.end));

                        container.parents(".service-wrapper").find("textarea[name='description']").val("");
                    });

                    container.parents(".service-wrapper").find(".close.service").addClass("d-none");

                    container.parents(".service-wrapper").find(".fields").addClass("d-none");


                });

                $(".frm-edit-service").on("submit", function (e) {
                    e.preventDefault();

                    var container = $(this);
                    var $service = container.find("input[name='service']").val();
                    var $type = container.find("select[name='type']").val();
                    var $category = container.find("select[name='category']").val();
                    var $goat = container.find("input[name='goat']").val();
                    var $description = container.find("textarea[name='description']").val();
                    var $start = container.find("input[name='start']").val();
                    var $end = container.find("input[name='end']").val();

                    $.ajax({
                        type: "POST",
                        url: '/api/service/update',
                        data: { ServiceId: $service, GoatId: $goat, Type: $type, Category: $category, Description: $description, Start: $start, End: $end },
                    }).done(function (result) {
                        container.parents(".service-wrapper").find(".latest").find(".service-type").html(result.service.type);
                        container.parents(".service-wrapper").find(".latest").find(".service-description").html(result.service.description);
                        container.parents(".service-wrapper").find(".latest").find(".service-category").html(result.service.category);

                        container.parents(".service-wrapper").find(".latest").find(".service-start").html($.date(result.service.start));
                        container.parents(".service-wrapper").find(".latest").find(".service-end").html($.date(result.service.end));

                        container.parents(".service-wrapper").find("textarea[name='description']").val("");
                    });

                    container.parents(".service-wrapper").find(".close.service").addClass("d-none");

                    container.parents(".service-wrapper").find(".fields").addClass("d-none");

                    $('#modalGoatServices').modal('hide');


                });

                $("#modalGoatServices").on("click", ".edit.btn", function (event) {
                    $("#modalGoatServices .edit.form-wrapper").removeClass("d-none");

                    var $t = $(event.target);
                    $t = $t.is('.edit.btn') ? $t : $t.parents('.edit.btn');

                    $("#modalGoatServices .edit.form-wrapper input[name='service']").val($t.data("id"));
                    $("#modalGoatServices .edit.form-wrapper select[name='type']").val($t.data("type"));
                    $("#modalGoatServices .edit.form-wrapper select[name='category']").val($t.data("category"));
                    $("#modalGoatServices .edit.form-wrapper input[name='goat']").val($t.data("goat"));
                    $("#modalGoatServices .edit.form-wrapper textarea[name='description']").val(decodeURIComponent($t.data("description")));
                    $("#modalGoatServices .edit.form-wrapper input[name='start']").val($t.data("start"));
                    $("#modalGoatServices .edit.form-wrapper input[name='end").val($t.data("end"));

                    $("#modalGoatServices .services").addClass("d-none");
                });

                $("#modalGoatServices").on("click", ".delete.btn", function (event) {
                    var $t = $(event.target);
                    $t = $t.is('.delete.btn') ? $t : $t.parents('.delete.btn');

                    if (confirm("Are you sure you want to delete this?")) {

                        $.ajax({
                            type: "POST",
                            url: '/api/service/delete',
                            data: { ServiceId: $t.data("id") },
                        }).done(function (result) {

                            if (!result.error) {

                                if (result.service != true) {

                                }
                            } else {

                            }
                        });
                        $('#modalGoatServices').modal('hide');
                    }
                    else {
                        return false;
                    }
                });

                $(".service-wrapper").each(function () {
                    var container = $(this);

                    var $goat = container.find("input[name='goat']").val();

                    $.ajax({
                        type: "POST",
                        url: '/api/service',
                        data: { GoatId: $goat, count: 5 },
                    }).done(function (result) {

                        if (!result.error) {

                            if (result.services != null) {
                                $(result.services).each(function (index) {

                                    var $template = container.find(".template").clone().removeClass("template d-none");

                                    if (index == 0) {
                                        $template.addClass("active");
                                    }

                                    $template.find(".latest").find(".service-type").html(this.type);
                                    $template.find(".latest").find(".service-description").html(this.description);
                                    $template.find(".latest").find(".service-category").html(this.category);
                                    $template.find(".latest").find(".service-start").html($.date(this.start));
                                    $template.find(".latest").find(".service-end").html($.date(this.end));

                                    container.find(".carousel-inner").append($template);

                                });

                            } else {
                                container.find(".latest").html("Something went wrong.");
                            }
                        }
                    });

                });
            });

        })(jQuery);
    </script>
}